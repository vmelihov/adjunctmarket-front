jQuery(function(e){e(".js-profileType").on("click",function(){e(this).hasClass("active")||(e(".js-profileType").toggleClass("active"),e(".js-institution").toggleClass("d-none"))}),e(".js-selectize").selectize({create:!0,sortField:"text"});var t=e(".js-form"),n=t.data("validate"),i=0,l=function(s,a){s?(a.removeClass("error"),a.hasClass("checked")||(a.addClass("checked"),i++)):(a.addClass("error"),a.hasClass("checked")&&(a.removeClass("checked"),i--)),i==n?t.find(".js-submit").removeAttr("disabled"):t.find(".js-submit").attr("disabled","disabled")};e(".js-mailValidation").focusout(function(){var s,a=e(this),t=a.parents(".js-validateblock");l((s=a.val(),/^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(s)),t)}),e(".js-textValidation").focusout(function(){var s,a=e(this),t=a.parents(".js-validateblock");s=""!=a.val(),l(s,t)});var a=function(s){var a=s.parents(".js-validateblock");e(".js-passValidation1").val()==e(".js-passValidation2").val()?""==s.val()?l(!1,a):(l(!0,a),l(!0,e(".js-passValidation2").parents(".js-validateblock"))):""==s.val()?l(!1,a):(l(!0,a),l(!1,e(".js-passValidation2").parents(".js-validateblock")))};e(".js-passValidation").change(function(){a(e(this))}),e(".js-passInput").change(function(){var s=e(this);s.parents(".js-passParent").find(".js-notPassInput").focus().val(s.val())}),e(".js-notPassInput").change(function(){var s=e(this);_pass=s.parents(".js-passParent").find(".js-passInput"),_pass.focus().val(s.val()),a(_pass)}),e(".js-passEye").on("click",function(){var s=e(this);s.parents(".js-passParent").find(".js-passLine").removeClass("d-none"),s.parents(".js-passLine").addClass("d-none")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZy5qcyJdLCJuYW1lcyI6WyJqUXVlcnkiLCIkIiwib24iLCJ0aGlzIiwiaGFzQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsInNlbGVjdGl6ZSIsImNyZWF0ZSIsInNvcnRGaWVsZCIsImZvcm0iLCJmaWVsZHNOdW0iLCJkYXRhIiwib2tGaWVsZHNOdW0iLCJjaGVja0Zvcm0iLCJfYm9vbGVhbiIsIl9wYXJlbnQiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiZmluZCIsInJlbW92ZUF0dHIiLCJhdHRyIiwiZm9jdXNvdXQiLCJlbWFpbCIsIl90aGlzIiwicGFyZW50cyIsInZhbCIsInRlc3QiLCJfYSIsImNoZWNrUGFzcyIsImNoYW5nZSIsImZvY3VzIiwiX3Bhc3MiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLFNBQVVDLEdBQ2JBLEVBQUUsbUJBQW1CQyxHQUFHLFFBQVMsV0FDeEJELEVBQUVFLE1BQU1DLFNBQVMsWUFDbEJILEVBQUUsbUJBQW1CSSxZQUFZLFVBQ2pDSixFQUFFLG1CQUFtQkksWUFBWSxhQUd6Q0osRUFBRSxpQkFBaUJLLFVBQVUsQ0FDekJDLFFBQVEsRUFDUkMsVUFBVyxTQUdmLElBQUlDLEVBQU9SLEVBQUUsWUFDVFMsRUFBWUQsRUFBS0UsS0FBSyxZQUN0QkMsRUFBYyxFQU1kQyxFQUFZLFNBQVVDLEVBQVVDLEdBQ3hCRCxHQUNBQyxFQUFRQyxZQUFZLFNBRWZELEVBQVFYLFNBQVMsYUFDbEJXLEVBQVFFLFNBQVMsV0FDakJMLE9BR0pHLEVBQVFFLFNBQVMsU0FFYkYsRUFBUVgsU0FBUyxhQUNqQlcsRUFBUUMsWUFBWSxXQUNwQkosTUFLSkEsR0FBZUYsRUFDZkQsRUFBS1MsS0FBSyxjQUFjQyxXQUFXLFlBRW5DVixFQUFLUyxLQUFLLGNBQWNFLEtBQUssV0FBWSxhQUlyRG5CLEVBQUUsc0JBQXNCb0IsU0FBUyxXQUM3QixJQTlCb0JDLEVBOEJoQkMsRUFBUXRCLEVBQUVFLE1BQ1ZZLEVBQVVRLEVBQU1DLFFBQVEscUJBRTVCWCxHQWpDb0JTLEVBaUNGQyxFQUFNRSxNQWhDUixnRUFDQ0MsS0FBS0osSUErQlVQLEtBRXBDZCxFQUFFLHNCQUFzQm9CLFNBQVMsV0FDN0IsSUFFSU0sRUFGQUosRUFBUXRCLEVBQUVFLE1BQ1ZZLEVBQVVRLEVBQU1DLFFBQVEscUJBSXhCRyxFQURlLElBQWZKLEVBQU1FLE1BS1ZaLEVBQVVjLEVBQUlaLEtBR2xCLElBQUlhLEVBQVksU0FBVUwsR0FDdEIsSUFBSVIsRUFBVVEsRUFBTUMsUUFBUSxxQkFHeEJ2QixFQUFFLHVCQUF1QndCLE9BQVN4QixFQUFFLHVCQUF1QndCLE1BQ3hDLElBQWZGLEVBQU1FLE1BQ05aLEdBQVUsRUFBT0UsSUFFakJGLEdBQVUsRUFBTUUsR0FDaEJGLEdBQVUsRUFBTVosRUFBRSx1QkFBdUJ1QixRQUFRLHVCQUdsQyxJQUFmRCxFQUFNRSxNQUNOWixHQUFVLEVBQU9FLElBRWpCRixHQUFVLEVBQU1FLEdBQ2hCRixHQUFVLEVBQU9aLEVBQUUsdUJBQXVCdUIsUUFBUSx3QkFJOUR2QixFQUFFLHNCQUFzQjRCLE9BQU8sV0FDM0JELEVBQVUzQixFQUFFRSxTQUdoQkYsRUFBRSxpQkFBaUI0QixPQUFPLFdBQ3RCLElBQUlOLEVBQVF0QixFQUFFRSxNQUNkb0IsRUFBTUMsUUFBUSxrQkFBa0JOLEtBQUssb0JBQW9CWSxRQUFRTCxJQUFJRixFQUFNRSxTQUUvRXhCLEVBQUUsb0JBQW9CNEIsT0FBTyxXQUN6QixJQUFJTixFQUFRdEIsRUFBRUUsTUFDZDRCLE1BQVFSLEVBQU1DLFFBQVEsa0JBQWtCTixLQUFLLGlCQUM3Q2EsTUFBTUQsUUFBUUwsSUFBSUYsRUFBTUUsT0FDeEJHLEVBQVVHLFNBRWQ5QixFQUFFLGVBQWVDLEdBQUcsUUFBUyxXQUN6QixJQUFJcUIsRUFBUXRCLEVBQUVFLE1BRWRvQixFQUFNQyxRQUFRLGtCQUFrQk4sS0FBSyxnQkFBZ0JGLFlBQVksVUFDakVPLEVBQU1DLFFBQVEsZ0JBQWdCUCxTQUFTIiwiZmlsZSI6InJlZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImpRdWVyeShmdW5jdGlvbiAoJCkge1xyXG4gICAgJChcIi5qcy1wcm9maWxlVHlwZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoXCJhY3RpdmVcIikpIHtcclxuICAgICAgICAgICAgJChcIi5qcy1wcm9maWxlVHlwZVwiKS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgJChcIi5qcy1pbnN0aXR1dGlvblwiKS50b2dnbGVDbGFzcyhcImQtbm9uZVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICQoJy5qcy1zZWxlY3RpemUnKS5zZWxlY3RpemUoe1xyXG4gICAgICAgIGNyZWF0ZTogdHJ1ZSxcclxuICAgICAgICBzb3J0RmllbGQ6ICd0ZXh0J1xyXG4gICAgfSk7XHJcblxyXG4gICAgdmFyIGZvcm0gPSAkKFwiLmpzLWZvcm1cIiksXHJcbiAgICAgICAgZmllbGRzTnVtID0gZm9ybS5kYXRhKFwidmFsaWRhdGVcIiksXHJcbiAgICAgICAgb2tGaWVsZHNOdW0gPSAwLFxyXG5cclxuICAgICAgICBpc0VtYWlsID0gZnVuY3Rpb24gKGVtYWlsKSB7XHJcbiAgICAgICAgICAgIHZhciByZWdleCA9IC9eKFthLXpBLVowLTlfListXSkrXFxAKChbYS16QS1aMC05LV0pK1xcLikrKFthLXpBLVowLTldezIsNH0pKyQvO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVnZXgudGVzdChlbWFpbCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjaGVja0Zvcm0gPSBmdW5jdGlvbiAoX2Jvb2xlYW4sIF9wYXJlbnQpIHtcclxuICAgICAgICAgICAgaWYgKF9ib29sZWFuKSB7XHJcbiAgICAgICAgICAgICAgICBfcGFyZW50LnJlbW92ZUNsYXNzKFwiZXJyb3JcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCFfcGFyZW50Lmhhc0NsYXNzKFwiY2hlY2tlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIF9wYXJlbnQuYWRkQ2xhc3MoXCJjaGVja2VkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9rRmllbGRzTnVtKys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBfcGFyZW50LmFkZENsYXNzKFwiZXJyb3JcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKF9wYXJlbnQuaGFzQ2xhc3MoXCJjaGVja2VkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX3BhcmVudC5yZW1vdmVDbGFzcyhcImNoZWNrZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgb2tGaWVsZHNOdW0tLTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAvL2NvbnNvbGUubG9nKG9rRmllbGRzTnVtICsgXCIgXCIgKyBmaWVsZHNOdW0pO1xyXG4gICAgICAgICAgICBpZiAob2tGaWVsZHNOdW0gPT0gZmllbGRzTnVtKSB7XHJcbiAgICAgICAgICAgICAgICBmb3JtLmZpbmQoXCIuanMtc3VibWl0XCIpLnJlbW92ZUF0dHIoXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGZvcm0uZmluZChcIi5qcy1zdWJtaXRcIikuYXR0cihcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICQoXCIuanMtbWFpbFZhbGlkYXRpb25cIikuZm9jdXNvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcyksXHJcbiAgICAgICAgICAgIF9wYXJlbnQgPSBfdGhpcy5wYXJlbnRzKFwiLmpzLXZhbGlkYXRlYmxvY2tcIik7XHJcblxyXG4gICAgICAgIGNoZWNrRm9ybShpc0VtYWlsKF90aGlzLnZhbCgpKSwgX3BhcmVudCk7XHJcbiAgICB9KTtcclxuICAgICQoXCIuanMtdGV4dFZhbGlkYXRpb25cIikuZm9jdXNvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcyksXHJcbiAgICAgICAgICAgIF9wYXJlbnQgPSBfdGhpcy5wYXJlbnRzKFwiLmpzLXZhbGlkYXRlYmxvY2tcIiksXHJcbiAgICAgICAgICAgIF9hO1xyXG5cclxuICAgICAgICBpZiAoX3RoaXMudmFsKCkgPT0gXCJcIikge1xyXG4gICAgICAgICAgICBfYSA9IGZhbHNlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgX2EgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjaGVja0Zvcm0oX2EsIF9wYXJlbnQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdmFyIGNoZWNrUGFzcyA9IGZ1bmN0aW9uIChfdGhpcykge1xyXG4gICAgICAgIHZhciBfcGFyZW50ID0gX3RoaXMucGFyZW50cyhcIi5qcy12YWxpZGF0ZWJsb2NrXCIpO1xyXG5cclxuICAgICAgICAvL2NvbnNvbGUubG9nKCQoXCIuanMtcGFzc1ZhbGlkYXRpb24xXCIpLnZhbCgpICsgXCIgXCIgKyAkKFwiLmpzLXBhc3NWYWxpZGF0aW9uMlwiKS52YWwoKSk7XHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFzc1ZhbGlkYXRpb24xXCIpLnZhbCgpID09ICQoXCIuanMtcGFzc1ZhbGlkYXRpb24yXCIpLnZhbCgpKSB7XHJcbiAgICAgICAgICAgIGlmIChfdGhpcy52YWwoKSA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICBjaGVja0Zvcm0oZmFsc2UsIF9wYXJlbnQpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2hlY2tGb3JtKHRydWUsIF9wYXJlbnQpO1xyXG4gICAgICAgICAgICAgICAgY2hlY2tGb3JtKHRydWUsICQoXCIuanMtcGFzc1ZhbGlkYXRpb24yXCIpLnBhcmVudHMoXCIuanMtdmFsaWRhdGVibG9ja1wiKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoX3RoaXMudmFsKCkgPT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgY2hlY2tGb3JtKGZhbHNlLCBfcGFyZW50KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNoZWNrRm9ybSh0cnVlLCBfcGFyZW50KTtcclxuICAgICAgICAgICAgICAgIGNoZWNrRm9ybShmYWxzZSwgJChcIi5qcy1wYXNzVmFsaWRhdGlvbjJcIikucGFyZW50cyhcIi5qcy12YWxpZGF0ZWJsb2NrXCIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICQoXCIuanMtcGFzc1ZhbGlkYXRpb25cIikuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjaGVja1Bhc3MoJCh0aGlzKSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCcuanMtcGFzc0lucHV0JykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgIF90aGlzLnBhcmVudHMoXCIuanMtcGFzc1BhcmVudFwiKS5maW5kKFwiLmpzLW5vdFBhc3NJbnB1dFwiKS5mb2N1cygpLnZhbChfdGhpcy52YWwoKSk7XHJcbiAgICB9KTtcclxuICAgICQoJy5qcy1ub3RQYXNzSW5wdXQnKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcylcclxuICAgICAgICBfcGFzcyA9IF90aGlzLnBhcmVudHMoXCIuanMtcGFzc1BhcmVudFwiKS5maW5kKFwiLmpzLXBhc3NJbnB1dFwiKTtcclxuICAgICAgICBfcGFzcy5mb2N1cygpLnZhbChfdGhpcy52YWwoKSk7XHJcbiAgICAgICAgY2hlY2tQYXNzKF9wYXNzKTtcclxuICAgIH0pO1xyXG4gICAgJChcIi5qcy1wYXNzRXllXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9ICQodGhpcyk7XHJcblxyXG4gICAgICAgIF90aGlzLnBhcmVudHMoXCIuanMtcGFzc1BhcmVudFwiKS5maW5kKFwiLmpzLXBhc3NMaW5lXCIpLnJlbW92ZUNsYXNzKFwiZC1ub25lXCIpO1xyXG4gICAgICAgIF90aGlzLnBhcmVudHMoXCIuanMtcGFzc0xpbmVcIikuYWRkQ2xhc3MoXCJkLW5vbmVcIik7XHJcbiAgICB9KTtcclxufSk7Il19
